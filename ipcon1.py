# -*- coding: utf-8 -*-
"""
Created on Thu May  9 14:14:40 2019

@author: kst
"""

import networkx as nx
import numpy as np
import random
class ipconfigs:
    port = 62
    
    party_addr =  ['192.168.100.1', #P0
                   '192.168.100.2', #P1
                   '192.168.100.3', #P2
                   '192.168.100.4', #P3
                   '192.168.100.5', #P4
                   '192.168.100.6',  #P5
                   '192.168.100.7',  #P5
                   '192.168.100.8',  #P5
                   '192.168.100.9',  #P5
                   '192.168.100.10',  #P5
                   '192.168.100.11',  #P5
                   '192.168.100.12',  #P5
                   '192.168.100.13',  #P5
                   '192.168.100.14',  #P5
                   '192.168.100.15',  #P5
                   '192.168.100.16',  #P5
                   '192.168.100.17',  #P5
                   '192.168.100.18',  #P5
                   '192.168.100.19',  #P5
                   '192.168.100.20',  #P5
                   '192.168.100.21',  #P5
                   '192.168.100.22',
                   '192.168.100.23', #P0
                   '192.168.100.24', #P1
                   '192.168.100.25', #P2
                   '192.168.100.26',  #P5
                   '192.168.100.27',  #P5
                   '192.168.100.28',  #P5
                   '192.168.100.29',  #P5
                   '192.168.100.30',  #P5
                   '192.168.100.31',  #P5
                   '192.168.100.32',  #P5
                   '192.168.100.33',  #P5
                   '192.168.100.34',  #P5
                   '192.168.100.35',  #P5
                   '192.168.100.36',  #P5
                   '192.168.100.37',  #P5
                   '192.168.100.38',  #P5
                   '192.168.100.39',  #P5
                   '192.168.100.40',  #P5
                   '192.168.100.41',  #P5
                   '192.168.100.42',
                   '192.168.100.43', #P2
                   '192.168.100.44', #P3
                   '192.168.100.45', #P4
                   '192.168.100.46',  #P5
                   '192.168.100.47',  #P5
                   '192.168.100.48',  #P5
                   '192.168.100.49',  #P5
                   '192.168.100.50',  #P5
                   '192.168.100.51',  #P5
                   '192.168.100.52',  #P5
                   '192.168.100.53',  #P5
                   '192.168.100.54',  #P5
                   '192.168.100.55',  #P5
                   '192.168.100.56',  #P5
                   '192.168.100.57',  #P5
                   '192.168.100.58',  #P5
                   '192.168.100.59',  #P5
                   '192.168.100.60',
                   '192.168.100.61', #P0
                   '192.168.100.62', #P1
                   '192.168.100.63', #P2
                   '192.168.100.64', #P3
                   '192.168.100.65', #P4
                   '192.168.100.66',  #P5
                   '192.168.100.67',  #P5
                   '192.168.100.68',  #P5
                   '192.168.100.69',  #P5
                   '192.168.100.70',
                   '192.168.100.71', #P0
                   '192.168.100.72', #P1
                   '192.168.100.73', #P2
                   '192.168.100.74', #P3
                   '192.168.100.75', #P4
                   '192.168.100.76',  #P5
                   '192.168.100.77',  #P5
                   '192.168.100.78',  #P5
                   '192.168.100.79',  #P5
                   '192.168.100.80',
                   '192.168.100.81', #P0
                   '192.168.100.82', #P1
                   '192.168.100.83', #P2
                   '192.168.100.84', #P3
                   '192.168.100.85', #P4
                   '192.168.100.86',  #P5
                   '192.168.100.87',  #P5
                   '192.168.100.88',  #P5
                   '192.168.100.89',  #P5
                   '192.168.100.90',
                   '192.168.100.91', #P0
                   '192.168.100.92', #P1
                   '192.168.100.93', #P2
                   '192.168.100.94', #P3
                   '192.168.100.95', #P4
                   '192.168.100.96',  #P5
                   '192.168.100.97',  #P5
                   '192.168.100.98',  #P5
                   '192.168.100.99',  #P5
                   '192.168.100.100', #P5
                   '192.168.100.101', #P0
                   '192.168.100.102', #P1
                   '192.168.100.103', #P2
                   '192.168.100.104', #P3
                   '192.168.100.105', #P4
                   '192.168.100.106',  #P5
                   '192.168.100.107',  #P5
                   '192.168.100.108',  #P5
                   '192.168.100.109',  #P5
                   '192.168.100.110',  #P5
                   '192.168.100.111',  #P5
                   '192.168.100.112',  #P5
                   '192.168.100.113',  #P5
                   '192.168.100.114',  #P5
                   '192.168.100.115',  #P5
                   '192.168.100.116',  #P5
                   '192.168.100.117',  #P5
                   '192.168.100.118',  #P5
                   '192.168.100.119',  #P5
                   '192.168.100.120',  #P5
                   '192.168.100.121',  #P5
                   '192.168.100.122',
                   '192.168.100.123', #P0
                   '192.168.100.124', #P1
                   '192.168.100.125', #P2
                   '192.168.100.126',  #P5
                   '192.168.100.127',  #P5
                   '192.168.100.128',  #P5
                   '192.168.100.129',  #P5
                   '192.168.100.130',  #P5
                   '192.168.100.131',  #P5
                   '192.168.100.132',  #P5
                   '192.168.100.133',  #P5
                   '192.168.100.134',  #P5
                   '192.168.100.135',  #P5
                   '192.168.100.136',  #P5
                   '192.168.100.137',  #P5
                   '192.168.100.138',  #P5
                   '192.168.100.139',  #P5
                   '192.168.100.140',  #P5
                   '192.168.100.141',  #P5
                   '192.168.100.142',
                   '192.168.100.143', #P2
                   '192.168.100.144', #P3
                   '192.168.100.145', #P4
                   '192.168.100.146',  #P5
                   '192.168.100.147',  #P5
                   '192.168.100.148',  #P5
                   '192.168.100.149',  #P5
                   '192.168.100.150',  #P5
                   '192.168.100.151',  #P5
                   '192.168.100.152',  #P5
                   '192.168.100.153',  #P5
                   '192.168.100.154',  #P5
                   '192.168.100.155',  #P5
                   '192.168.100.156',  #P5
                   '192.168.100.157',  #P5
                   '192.168.100.158',  #P5
                   '192.168.100.159',  #P5
                   '192.168.100.160',
                   '192.168.100.161', #P0
                   '192.168.100.162', #P1
                   '192.168.100.163', #P2
                   '192.168.100.164', #P3
                   '192.168.100.165', #P4
                   '192.168.100.166',  #P5
                   '192.168.100.167',  #P5
                   '192.168.100.168',  #P5
                   '192.168.100.169',  #P5
                   '192.168.100.170',
                   '192.168.100.171', #P0
                   '192.168.100.172', #P1
                   '192.168.100.173', #P2
                   '192.168.100.174', #P3
                   '192.168.100.175', #P4
                   '192.168.100.176',  #P5
                   '192.168.100.177',  #P5
                   '192.168.100.178',  #P5
                   '192.168.100.179',  #P5
                   '192.168.100.180',
                   '192.168.100.181', #P0
                   '192.168.100.182', #P1
                   '192.168.100.183', #P2
                   '192.168.100.184', #P3
                   '192.168.100.185', #P4
                   '192.168.100.186',  #P5
                   '192.168.100.187',  #P5
                   '192.168.100.188',  #P5
                   '192.168.100.189',  #P5
                   '192.168.100.190',
                   '192.168.100.191', #P0
                   '192.168.100.192', #P1
                   '192.168.100.193', #P2
                   '192.168.100.194', #P3
                   '192.168.100.195', #P4
                   '192.168.100.196',  #P5
                   '192.168.100.197',  #P5
                   '192.168.100.198',  #P5
                   '192.168.100.199',  #P5
                   '192.168.100.200'#P5
                  ]
    
    ccu_adr = '192.168.100.246'
    
    server_addr = [[ccu_adr, 4002], #P0
                   [ccu_adr, 4003], #P1
                   [ccu_adr, 4007], #P2
                   [ccu_adr, 4008], #P3
                   [ccu_adr, 4010], #Reciever 4
                   [ccu_adr, 4011]  #Reciever 5
                  ]
    
class network:
    
    N = [[0,1,2],
         [0,1,2],
         [0,1,2,5],
         [3,4,5],
         [3,4,5],
         [2,3,4,5]            
        ]
    
    C = [[[1,0,1,2]],
         [[1,0,1,2]],
         [[1,0,1,2]],
         [[2,3,4,5]],
         [[2,3,4,5]],
         [[2,3,4,5]]
        ]
    
    VC =[[],
         [[2,1,5]],
         [[2,1,5],[5,2,3]],
         [[5,2,3]],
         [],
         [[2,1,5],[5,2,3]]
        ]
    
    W = [[[1,1,1]],
         [[1,1,2]],
         [[1,1,1]],
         [[1,1,2]],
         [[1,1,1]],
         [[1,1,1]]
        ]
    
    VW =[[],
         [2],
         [1,1],
         [2],
         [],
         [1,1]
        ]
    


def random_neighborhood(n, l):
    neighbors = [[i] for i in range(n)]
    links = 0
    edges = []
    nodes = np.arange(n)
    for i,neigh in enumerate(neighbors):
        while len(neigh) < 3:
            nn = list(set(nodes) - set(neigh))
            ch = random.choice(nn)
            neigh.append(ch)
            edges.append(((i,ch)))
            neighbors[ch].append(i)
            links+=1
    while links < l:
        j = random.choice(nodes)
        neigh = neighbors[j]
        nn = list(set(nodes) - set(neigh))
        if nn:
            ch = random.choice(nn)
            neighbors[j].append(ch)
            edges.append(((j,ch)))
            neighbors[ch].append(j)
            links+=1
    return neighbors, edges, links


def find_cliques(n, edges, neighbors):
    G = nx.Graph()
    G.add_edges_from(edges)
    nodes = np.arange(n)
    
    cliques = [[] for i in range(n)]
    virCliques = [[] for i in range(n)]
    cli = []
    
    for i in nodes:
        cli.append(nx.cliques_containing_node(G,i))
        
    for i,cl in enumerate(cli):
        for j in cl:
            if len(j) < 3:
                virCliques[i].append(j)
            else:
                cliques[i].append(j)
    
    virCli = [[] for i in range(n)]
    for i,cl in enumerate(virCliques):
        while cl:
            if len(cl) > 1:
                no1 = [j for j in cl[0] if j != i][0]
                no2 = [j for j in cl[1] if j != i][0]
                virCli[i].append([i,no1,no2])
                virCli[no1].append([i,no1,no2])
                virCli[no2].append([i,no1,no2])
                cl.pop(0)  
                cl.pop(0)   #twice becuase i want to remove the first two elements (nummer 1 will be number 0 after 0 has been removed.)
            else:
                no1 = [j for j in cl[0] if j != i][0]
                li = [j for j in neighbors[i] if j not in [i, no1]]
                no2 = random.choice(li)
                virCli[i].append([i, no1, no2])
                virCli[no1].append([i,no1,no2])
                virCli[no2].append([i,no1,no2])
                cl.pop(0)
    
    return cliques, virCli 

def find_weights(n, neighbors, cliques, virCli):
    W = [{} for i in range(n)]
    for i,item in enumerate(W):
        for k in neighbors[i]:
            count = 0
            for cc in cliques[i]:
                if k in cc:
                    count += 1
            if k != i and count != 0:
                for cc1 in virCli[i]:
                    if k in cc1:
                        count += 1
            if count == 0:
                count +=1
            item[k] = count
                            
    return W
#random.seed(4)
def get_graph_info(n,links):
    neighbors, edges, links = random_neighborhood(n,links)
    cliques, vircliques = find_cliques(n, edges, neighbors)
    w = find_weights(n,neighbors,cliques,vircliques)
    
  
    for i in cliques:
        for j in i:
            b = ''
            for k in j:
                b+= str(k)
            j.insert(0, b)

    for i in vircliques:
        for j in i:
            b = ''
            for k in j:
                b+= str(k)
            j.insert(0, b)
            
    
    return neighbors, cliques, vircliques, w, edges, links
#
#neighbors, cliques, vircliques, w, edges, links = get_graph_info(6,8)
#print(cliques)
#
#G = nx.Graph()
#G.add_edges_from(edges)
#nx.draw(G, with_labels = True)
#
#
#
#    
#    
#    
#    
    